# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

title: MedSiglipPrediction
type: object
description: The generated model result (i.e., computed vector representation of the input data).
additionalProperties: false
properties:
  embedding:
    type: array
    description: >
      A feature-rich vector representation of the input image or text generated by the model.
    items:
      type: number
      format: float
    minItems: 1
  input_type:
    type: string
    enum:
      - image
      - text
  patch_embeddings:
    type: array
    description: >
      Feature-rich vector representation(s) of the input image patche(s) together with image patch
      coordinates.
    items:
      $ref: '#/components/patch_embedding'
    minItems: 1
 # TODO(b/410064131): Return as metadata awaiting go/yaqs/7461887338948329472
  model_temperature:
    type: number
    format: float
    description: >
      Optional: The learned temperature to be used for scaling similarity scores.
      Refer to https://arxiv.org/abs/2303.15343 for more details.
  # TODO(b/410064131): Return as metadata awaiting go/yaqs/7461887338948329472
  model_bias:
    type: number
    format: float
    description: >
     Optional: The learned bias to be used for scaling similarity scores.
     Refer to https://arxiv.org/abs/2303.15343 for more details.
  error:
    type: object
    additionalProperties: false
    properties:
      description:
        type: string
        description: A human-readable explanation of the error.
        maxLength: 1024

# Make `embedding`, `patch_embeddings` and `error` mutually exclusive.
# Don't allow `input_type`, `patch_embeddings`, `model_temperature`, or `model_bias` with `error`.
oneOf:
  - required:
    - embedding
    - input_type
    - model_temperature
    - model_bias
    properties:
      patch_embeddings: false
      error: false
  - required:
    - patch_embeddings
    - input_type
    - model_temperature
    - model_bias
    properties:
      embedding: false
      error: false
  - required:
    - error
    properties:
      embedding: false
      input_type: false
      patch_embeddings: false
      model_temperature: false
      model_bias: false

components:
  patch_embedding:
    type: object
    description: >
      A feature-rich vector representation of an input image patch together with the patch
      coordinates.
    additionalProperties: false
    properties:
      embedding:
        type: array
        items:
          type: number
          format: float
        minItems: 1
        description: The vector representation.
      patch_coordinate:
        $ref: '#/components/patch_coordinate'
        description: Coordinates of the image patch.
    required:
      - embedding
      - patch_coordinate

  patch_coordinate:
    type: object
    additionalProperties: false
    properties:
      x_origin:
        type: integer
        format: int64
        minimum: 0
        description: >
          The x-coordinate of the top-left corner of the rectangular patch.
      y_origin:
        type: integer
        format: int64
        minimum: 0
        description: >
          The y-coordinate of the top-left corner of the rectangular patch.
      width:
        type: integer
        format: int64
        minimum: 1
        description: >
          The width of the rectangular patch, extending to the right from 'x_origin'.
          Note that if the underlying model does not support custom patch sizes, this
          value will be disregarded. Refer to the API specification for details on the
          default patch size and whether custom sizes are supported.
      height:
        type: integer
        format: int64
        minimum: 1
        description: >
          The height of the rectangular patch, extending downwards from 'y_origin'.
          Note that if the underlying model does not support custom patch sizes, this
          value will be disregarded. Refer to the API specification for details on the
          default patch size and whether custom sizes are supported.
    required:
      - x_origin
      - y_origin
